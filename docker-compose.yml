version: '2'

services:
    nginx:
        build: 
            context: ./builds/nginx
        container_name: nginx
        ports:
            - 80:80
        links:
            - php
        volumes_from:
            - php
        volumes:
            - ./logs/nginx/:/var/log/nginx:delegated
        restart: always

    php:
        build: 
            context: ./builds/php-fpm
            args:
                - PHP_VERSION=${PHP_VERSION}  
        container_name: php   
        ports:
            - 9000:9000
        volumes:
            - ${WORKSPACE_APP_PATH}:/var/www/workspace:delegated
        restart: always

    # db:
    #     user: "${USER_ID}:50"
    #     image: mysql:5
    #     container_name: db
    #     command: mysqld --sql_mode=""
    #     ports:
    #        - "3306:3306"
    #     volumes:
    #       - ${MYSQL_PATH}:/var/lib/mysql
    #     environment:
    #        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    #        MYSQL_USER: ${MYSQL_USER}
    #        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    #     restart: always


    db:
        image: mariadb:10.1.37
        container_name: db
        ports:
            - "3306:3306"
        volumes:
            - ${MYSQL_PATH}:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        restart: always


    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        volumes:
            - ${CONFIG_FILE}:/etc/phpmyadmin/config.user.inc.php
        ports:
            - "8080:80"
        links:
            - db
        restart: always

    elasticsearch:
        user: "${USER_ID}:50"
        image: elasticsearch:1.7-alpine
        container_name: elasticsearch
        ports:
          - 81:80
        volumes_from:
          - php
        volumes:
            - ${ES_DATA_PATH}:/usr/share/elasticsearch/data:delegated
            - ${ES_CONFIG_PATH}:/usr/share/elasticsearch/config:delegated
        restart: always

    varnish:
        image: biko2/docker-varnish
        container_name: varnish
        ports:
            - "8000:80"
        tty: true
        environment:
            VARNISH_BACKEND_PORT: 80
            VARNISH_BACKEND_IP: ${VARNISH_BACKEND_IP}
            VARNISH_PORT: 80
            VARNISH_MEMORY: 100M
        restart: always

volumes:
  applications-docker-sync:
    external: true

